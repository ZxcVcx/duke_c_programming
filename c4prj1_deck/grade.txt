Grading at Thu 05 Oct 2023 02:34:14 PM UTC
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
- Test passed
Testing add_empty_card(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==239== Memcheck, a memory error detector
==239== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==239== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==239== Command: ./tester aec
==239== Parent PID: 238
==239== 
==239== Use of uninitialised value of size 8
==239==    at 0x10A856: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==239==    by 0x10BE93: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==239==    by 0x10CB4A: main (in /graderhome/work/c4prj1_deck/tester)
==239== 
==239== Invalid write of size 8
==239==    at 0x10A856: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==239==    by 0x10BE93: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==239==    by 0x10CB4A: main (in /graderhome/work/c4prj1_deck/tester)
==239==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==239== 
==239== 
==239== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==239==  Access not within mapped region at address 0x0
==239==    at 0x10A856: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==239==    by 0x10BE93: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==239==    by 0x10CB4A: main (in /graderhome/work/c4prj1_deck/tester)
==239==  If you believe this happened as a result of a stack
==239==  overflow in your program's main thread (unlikely but
==239==  possible), you can try to increase the size of the
==239==  main thread stack using the --main-stacksize= flag.
==239==  The main thread stack size used in this run was 8388608.
==239== 
==239== HEAP SUMMARY:
==239==     in use at exit: 6,936 bytes in 447 blocks
==239==   total heap usage: 455 allocs, 8 frees, 7,048 bytes allocated
==239== 
==239== LEAK SUMMARY:
==239==    definitely lost: 0 bytes in 0 blocks
==239==    indirectly lost: 0 bytes in 0 blocks
==239==      possibly lost: 0 bytes in 0 blocks
==239==    still reachable: 6,936 bytes in 447 blocks
==239==         suppressed: 0 bytes in 0 blocks
==239== Rerun with --leak-check=full to see details of leaked memory
==239== 
==239== Use --track-origins=yes to see where uninitialised values come from
==239== For lists of detected and suppressed errors, rerun with: -s
==239== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing make_deck_exclude(deck_t *)
- Test passed
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
Testing with 2 hands
Testing with 3 hands
Testing with 4 hands
Testing with 5 hands
Testing with 6 hands
- Test passed
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: B
