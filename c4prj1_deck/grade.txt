Grading at Thu 05 Oct 2023 12:21:32 PM UTC
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==569== Memcheck, a memory error detector
==569== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==569== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==569== Command: ./tester act
==569== Parent PID: 568
==569== 
==569== Use of uninitialised value of size 8
==569==    at 0x10A7EA: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==569==    by 0x10B0E5: make_deck_exclude_their_add (in /graderhome/work/c4prj1_deck/tester)
==569==    by 0x10BAC7: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==569==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==569== 
==569== Invalid write of size 8
==569==    at 0x10A7EA: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==569==    by 0x10B0E5: make_deck_exclude_their_add (in /graderhome/work/c4prj1_deck/tester)
==569==    by 0x10BAC7: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==569==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==569==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==569== 
==569== 
==569== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==569==  Access not within mapped region at address 0x0
==569==    at 0x10A7EA: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==569==    by 0x10B0E5: make_deck_exclude_their_add (in /graderhome/work/c4prj1_deck/tester)
==569==    by 0x10BAC7: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==569==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==569==  If you believe this happened as a result of a stack
==569==  overflow in your program's main thread (unlikely but
==569==  possible), you can try to increase the size of the
==569==  main thread stack using the --main-stacksize= flag.
==569==  The main thread stack size used in this run was 8388608.
==569== 
==569== HEAP SUMMARY:
==569==     in use at exit: 904 bytes in 58 blocks
==569==   total heap usage: 58 allocs, 0 frees, 904 bytes allocated
==569== 
==569== LEAK SUMMARY:
==569==    definitely lost: 0 bytes in 0 blocks
==569==    indirectly lost: 0 bytes in 0 blocks
==569==      possibly lost: 0 bytes in 0 blocks
==569==    still reachable: 904 bytes in 58 blocks
==569==         suppressed: 0 bytes in 0 blocks
==569== Rerun with --leak-check=full to see details of leaked memory
==569== 
==569== Use --track-origins=yes to see where uninitialised values come from
==569== For lists of detected and suppressed errors, rerun with: -s
==569== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==573== Memcheck, a memory error detector
==573== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==573== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==573== Command: ./tester aec
==573== Parent PID: 572
==573== 
==573== Use of uninitialised value of size 8
==573==    at 0x10A864: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==573==    by 0x10BE62: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==573==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==573== 
==573== Invalid write of size 8
==573==    at 0x10A864: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==573==    by 0x10BE62: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==573==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==573==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==573== 
==573== 
==573== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==573==  Access not within mapped region at address 0x0
==573==    at 0x10A864: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==573==    by 0x10BE62: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==573==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==573==  If you believe this happened as a result of a stack
==573==  overflow in your program's main thread (unlikely but
==573==  possible), you can try to increase the size of the
==573==  main thread stack using the --main-stacksize= flag.
==573==  The main thread stack size used in this run was 8388608.
==573== 
==573== HEAP SUMMARY:
==573==     in use at exit: 6,936 bytes in 447 blocks
==573==   total heap usage: 455 allocs, 8 frees, 7,048 bytes allocated
==573== 
==573== LEAK SUMMARY:
==573==    definitely lost: 0 bytes in 0 blocks
==573==    indirectly lost: 0 bytes in 0 blocks
==573==      possibly lost: 0 bytes in 0 blocks
==573==    still reachable: 6,936 bytes in 447 blocks
==573==         suppressed: 0 bytes in 0 blocks
==573== Rerun with --leak-check=full to see details of leaked memory
==573== 
==573== Use --track-origins=yes to see where uninitialised values come from
==573== For lists of detected and suppressed errors, rerun with: -s
==573== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==577== Memcheck, a memory error detector
==577== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==577== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==577== Command: ./tester mde
==577== Parent PID: 576
==577== 
==577== Use of uninitialised value of size 8
==577==    at 0x10A7EA: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==577==    by 0x10A8FB: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==577==    by 0x10C133: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==577==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==577== 
==577== Invalid write of size 8
==577==    at 0x10A7EA: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==577==    by 0x10A8FB: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==577==    by 0x10C133: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==577==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==577==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==577== 
==577== 
==577== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==577==  Access not within mapped region at address 0x0
==577==    at 0x10A7EA: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==577==    by 0x10A8FB: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==577==    by 0x10C133: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==577==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==577==  If you believe this happened as a result of a stack
==577==  overflow in your program's main thread (unlikely but
==577==  possible), you can try to increase the size of the
==577==  main thread stack using the --main-stacksize= flag.
==577==  The main thread stack size used in this run was 8388608.
==577== 
==577== HEAP SUMMARY:
==577==     in use at exit: 888 bytes in 57 blocks
==577==   total heap usage: 57 allocs, 0 frees, 888 bytes allocated
==577== 
==577== LEAK SUMMARY:
==577==    definitely lost: 0 bytes in 0 blocks
==577==    indirectly lost: 0 bytes in 0 blocks
==577==      possibly lost: 0 bytes in 0 blocks
==577==    still reachable: 888 bytes in 57 blocks
==577==         suppressed: 0 bytes in 0 blocks
==577== Rerun with --leak-check=full to see details of leaked memory
==577== 
==577== Use --track-origins=yes to see where uninitialised values come from
==577== For lists of detected and suppressed errors, rerun with: -s
==577== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==581== Memcheck, a memory error detector
==581== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==581== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==581== Command: ./tester brd
==581== Parent PID: 580
==581== 
==581== Use of uninitialised value of size 8
==581==    at 0x10A7EA: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==581==    by 0x10A9BC: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==581==    by 0x10C3E0: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==581==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==581== 
==581== Invalid write of size 8
==581==    at 0x10A7EA: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==581==    by 0x10A9BC: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==581==    by 0x10C3E0: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==581==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==581==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==581== 
==581== 
==581== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==581==  Access not within mapped region at address 0x0
==581==    at 0x10A7EA: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==581==    by 0x10A9BC: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==581==    by 0x10C3E0: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==581==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==581==  If you believe this happened as a result of a stack
==581==  overflow in your program's main thread (unlikely but
==581==  possible), you can try to increase the size of the
==581==  main thread stack using the --main-stacksize= flag.
==581==  The main thread stack size used in this run was 8388608.
==581== 
==581== HEAP SUMMARY:
==581==     in use at exit: 104 bytes in 10 blocks
==581==   total heap usage: 11 allocs, 1 frees, 8,296 bytes allocated
==581== 
==581== LEAK SUMMARY:
==581==    definitely lost: 0 bytes in 0 blocks
==581==    indirectly lost: 0 bytes in 0 blocks
==581==      possibly lost: 0 bytes in 0 blocks
==581==    still reachable: 104 bytes in 10 blocks
==581==         suppressed: 0 bytes in 0 blocks
==581== Rerun with --leak-check=full to see details of leaked memory
==581== 
==581== Use --track-origins=yes to see where uninitialised values come from
==581== For lists of detected and suppressed errors, rerun with: -s
==581== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==585== Memcheck, a memory error detector
==585== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==585== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==585== Command: ./tester gmc
==585== Parent PID: 584
==585== 
==585== Invalid read of size 8
==585==    at 0x109BA4: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==585==    by 0x10C816: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==585==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==585==  Address 0x4a450e8 is 0 bytes after a block of size 8 alloc'd
==585==    at 0x483B723: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==585==    by 0x483E017: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==585==    by 0x10B28D: my_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==585==    by 0x10C764: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==585==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==585== 
==585== Invalid read of size 4
==585==    at 0x109BA7: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==585==    by 0x10C816: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==585==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==585==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==585== 
==585== 
==585== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==585==  Access not within mapped region at address 0x0
==585==    at 0x109BA7: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==585==    by 0x10C816: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==585==    by 0x10CB19: main (in /graderhome/work/c4prj1_deck/tester)
==585==  If you believe this happened as a result of a stack
==585==  overflow in your program's main thread (unlikely but
==585==  possible), you can try to increase the size of the
==585==  main thread stack using the --main-stacksize= flag.
==585==  The main thread stack size used in this run was 8388608.
==585== 
==585== HEAP SUMMARY:
==585==     in use at exit: 72 bytes in 8 blocks
==585==   total heap usage: 8 allocs, 0 frees, 72 bytes allocated
==585== 
==585== LEAK SUMMARY:
==585==    definitely lost: 0 bytes in 0 blocks
==585==    indirectly lost: 0 bytes in 0 blocks
==585==      possibly lost: 0 bytes in 0 blocks
==585==    still reachable: 72 bytes in 8 blocks
==585==         suppressed: 0 bytes in 0 blocks
==585== Rerun with --leak-check=full to see details of leaked memory
==585== 
==585== For lists of detected and suppressed errors, rerun with: -s
==585== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
